/** @format */

import Head from "next/head";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import { useEffect, useState } from "react";
import { bestNextMoveIterative } from "../../lib/eval";
import {
  getMyAccount,
  RequestChallenge,
  acceptChallenge,
  getListOfBots,
  getMyGames,
  streamOfGameEvents,
  makeAMove,
  streamOfSpecificGame,
} from "../../lib/games";
import { Challenge } from "../../types";
import { type } from "os";
const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const [activeGames, setActiveGames] = useState<any>([]);

  const checkAndAcceptChallenge = async () => {
    const gameEventsToCheck = await streamOfGameEvents();
    interface Challenge {
      type: string;
      challenge: {
        id: string;
      };
    }
    const challenges = gameEventsToCheck.filter((event: Challenge) => {
      return event.type === "challenge";
    });

    challenges.forEach((challenge: Challenge) => {
      return acceptChallenge(challenge.challenge.id);
    });
  };

  async function evaluatePosition() {
    const allGames: any = await myActiveGames();

    interface Game {
      fen: string;
      fullId: string;
      isMyTurn: boolean;
      color: string;
    }
    console.log(allGames);

    allGames.forEach((game: Game) => {
      const nextMove: string | null = bestNextMoveIterative(
        game.fen,
        200,
        game.color
      );

      if (nextMove === null) {
        console.log("no legal moves");
        return;
      }
      if (game.isMyTurn && allGames.length > 0) {
        makeAMove(game.fullId, nextMove);
      }
    });
  }

  const myActiveGames = async () => {
    const games = await getMyGames();
    return games["nowPlaying"];
  };
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div
          style={{
            display: "flex",
            flexDirection: "column",
            alignItems: "center",
            gap: "1em",
          }}
        >
          <button
            style={{
              backgroundColor: "red",
              color: "white",
              padding: "10px",
              borderRadius: "5px",
              marginLeft: "10px",
            }}
            onClick={() => {
              RequestChallenge();
            }}
          >
            request challenge
          </button>
          <button
            onClick={() => {
              checkAndAcceptChallenge();
            }}
          >
            Accept Challenge
          </button>
          <button onClick={getMyAccount}>Get My Account</button>
          <button onClick={getListOfBots}>Get List of Bots</button>
          <button onClick={streamOfGameEvents}>Stream of game events</button>
          <button onClick={() => makeAMove("cgkfTWHS", "e2e4")}>
            make a move
          </button>
          <button
            onClick={() => {
              setInterval(() => {
                getMyGames().then((games) => {
                  setActiveGames(games["nowPlaying"]);
                });
              }, 1000);
            }}
          >
            Get My Active Games
          </button>
          <button
            onClick={() => {
              evaluatePosition();
              setInterval(() => {
                evaluatePosition();
              }, 1000);
            }}
          >
            Get Legal Moves
          </button>
          <button onClick={() => streamOfSpecificGame("cgkfTWHS")}>
            stream of specific game
          </button>
        </div>
      </main>
    </>
  );
}
